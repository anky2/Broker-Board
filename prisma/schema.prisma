// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(AGENT)
  agency        Agency?   @relation(fields: [agencyId], references: [id])
  agencyId      String?
  reminders     Reminder[]
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Agency {
  id        String     @id @default(cuid())
  name      String
  users     User[]
  properties Property[]
  leads     Lead[]
}

model Property {
  id          String   @id @default(cuid())
  title       String
  bhk         Int
  price       Float
  area        Float
  location    String
  status      PropertyStatus @default(AVAILABLE)
  ownerInfo   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  agency      Agency   @relation(fields: [agencyId], references: [id])
  agencyId    String
  // ToDo: Add images and documents later with an Image model
}

model Lead {
  id          String   @id @default(cuid())
  name        String
  phone       String
  budget      Float
  preferences String
  status      LeadStatus @default(NEW)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  agency      Agency   @relation(fields: [agencyId], references: [id])
  agencyId    String
  reminders   Reminder[]
}

model Reminder {
  id          String   @id @default(cuid())
  note        String
  reminderDate DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lead        Lead     @relation(fields: [leadId], references: [id])
  leadId      String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

enum UserRole {
  ADMIN
  AGENT
  VIEWER
}

enum PropertyStatus {
  AVAILABLE
  RENTED
  SOLD
}

enum LeadStatus {
  NEW
  CONTACTED
  VISIT
  CLOSED
}
